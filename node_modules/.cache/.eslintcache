[{"C:\\Users\\yusif\\Desktop\\todo-app\\src\\index.js":"1","C:\\Users\\yusif\\Desktop\\todo-app\\src\\reportWebVitals.js":"2","C:\\Users\\yusif\\Desktop\\todo-app\\src\\App.js":"3","C:\\Users\\yusif\\Desktop\\todo-app\\src\\TodoApp\\TodoList.js":"4","C:\\Users\\yusif\\Desktop\\todo-app\\src\\contexts\\TodoApp.js":"5","C:\\Users\\yusif\\Desktop\\todo-app\\src\\TodoApp\\AddTodo.js":"6","C:\\Users\\yusif\\Desktop\\todo-app\\src\\TodoApp\\TodoApp.js":"7","C:\\Users\\yusif\\Desktop\\todo-app\\src\\TodoApp\\TodoAppControl.js":"8","C:\\Users\\yusif\\Desktop\\todo-app\\src\\TodoApp\\Title.js":"9","C:\\Users\\yusif\\Desktop\\todo-app\\src\\TodoApp\\TodoItem.js":"10"},{"size":1136,"mtime":1682974214341,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1681383765275,"results":"13","hashOfConfig":"12"},{"size":426,"mtime":1682522338389,"results":"14","hashOfConfig":"12"},{"size":585,"mtime":1681768759476,"results":"15","hashOfConfig":"12"},{"size":2373,"mtime":1681769017711,"results":"16","hashOfConfig":"12"},{"size":804,"mtime":1682409947871,"results":"17","hashOfConfig":"12"},{"size":246,"mtime":1682522820857,"results":"18","hashOfConfig":"12"},{"size":1280,"mtime":1682522673352,"results":"19","hashOfConfig":"12"},{"size":240,"mtime":1681568463651,"results":"20","hashOfConfig":"12"},{"size":2515,"mtime":1682972154718,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1o3t0sj",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},"C:\\Users\\yusif\\Desktop\\todo-app\\src\\index.js",[],[],"C:\\Users\\yusif\\Desktop\\todo-app\\src\\reportWebVitals.js",[],[],"C:\\Users\\yusif\\Desktop\\todo-app\\src\\App.js",[],[],"C:\\Users\\yusif\\Desktop\\todo-app\\src\\TodoApp\\TodoList.js",["57"],[],"import { useContext } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport { todoContext } from \"../contexts/TodoApp\";\r\n\r\n\r\nfunction TodoList() {\r\n\r\n  const [state, dispatch] = useContext(todoContext);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {Object.values(state.todos).filter(todo => (state.show === 'active' && todo.isActive) || (state.show === 'completed'\r\n          && !todo.isActive) || (state.show === \"all\")).map((todo, index) => (\r\n            <TodoItem {...todo} key={`key-${todo}-${index}`} />\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default TodoList;","C:\\Users\\yusif\\Desktop\\todo-app\\src\\contexts\\TodoApp.js",["58","59","60","61","62","63","64"],[],"import { createContext, useReducer } from \"react\";\r\n\r\nexport const todoContext = createContext();\r\n\r\nconst initialState = {\r\n  todos: {},\r\n  lastIndex: 0,\r\n  show: \"all\"\r\n\r\n}\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"add\":\r\n\r\n      if (!action.payload?.trim()) {\r\n        return state;\r\n      }\r\n\r\n      var todos = { ...state.todos };\r\n      var lastIndex = state.lastIndex + 1;\r\n      todos[lastIndex] = {\r\n        task: action.payload,\r\n        id: lastIndex,\r\n        isActive: true,\r\n        isEditable: false,\r\n\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        todos,\r\n        lastIndex\r\n      }\r\n    case \"remove\":\r\n      var todos = { ...state.todos };\r\n      delete todos[action.payload];\r\n\r\n      return {\r\n        ...state,\r\n        todos\r\n      }\r\n    case \"complete\":\r\n      var todos = { ...state.todos };\r\n      todos[action.payload].isActive = false;\r\n\r\n      return {\r\n        ...state,\r\n        todos\r\n      }\r\n\r\n    case \"uncomplete\":\r\n      var todos = { ...state.todos };\r\n      todos[action.payload].isActive = true;\r\n\r\n      return {\r\n        ...state,\r\n        todos\r\n      }\r\n\r\n    case \"open_edit_form\":\r\n      var todos = { ...state.todos }\r\n      todos[action.payload].isEditable = true;\r\n\r\n      return {\r\n        ...state,\r\n        todos\r\n      }\r\n\r\n    case \"close_edit_form\":\r\n      var todos = { ...state.todos };\r\n      todos[action.payload].isEditable = false;\r\n\r\n      return {\r\n        ...state,\r\n        todos\r\n      }\r\n\r\n    case \"save_change\":\r\n      var todos = { ...state.todos };\r\n      todos[action.payload.id].task = action.payload.task;\r\n      todos[action.payload.id].isEditable = false;\r\n\r\n      return {\r\n        ...state,\r\n        todos\r\n      }\r\n\r\n    case \"remove_completed_tasks\":\r\n\r\n      var todos = Object.fromEntries(Object.entries(state.todos || {}).filter(todo => todo.isActive))\r\n\r\n      return {\r\n        ...state,\r\n        todos\r\n      }\r\n\r\n    case 'show':\r\n      var show = { ...state.show }\r\n      show = action.payload\r\n      return {\r\n        ...state,\r\n        show\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction TodoApp({ children }) {\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  return (\r\n    <todoContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </todoContext.Provider>\r\n  )\r\n}\r\nexport default TodoApp;\r\n","C:\\Users\\yusif\\Desktop\\todo-app\\src\\TodoApp\\AddTodo.js",["65","66"],[],"import { useCallback, useContext, useRef } from 'react';\r\nimport style from './css/style.module.css';\r\nimport { todoContext } from '../contexts/TodoApp';\r\n\r\nfunction AddTodo() {\r\n\r\n    const [state, dispatch] = useContext(todoContext);\r\n    const inpRef = useRef();\r\n\r\n    const onSubmit = useCallback(e => {\r\n        e.preventDefault();\r\n        dispatch ({\r\n            type: 'add',\r\n            payload: inpRef.current.value\r\n        })\r\n        \r\n        inpRef.current.value = ''\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className={style.addTodo}>\r\n                <input type=\"text\" ref={inpRef} placeholder='Add a new task'/>\r\n                <button className={style.addBtn}>Add</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\nexport default AddTodo;","C:\\Users\\yusif\\Desktop\\todo-app\\src\\TodoApp\\TodoApp.js",[],[],"C:\\Users\\yusif\\Desktop\\todo-app\\src\\TodoApp\\TodoAppControl.js",["67"],[],"import { useContext } from 'react';\r\nimport style from './css/style.module.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport { todoContext } from '../contexts/TodoApp';\r\n\r\nfunction TodoAppControl() {\r\n\r\n    const [state, dispatch] = useContext(todoContext);\r\n\r\n\r\n    const all = () => {\r\n        dispatch({\r\n            type: 'show',\r\n            payload: 'all'\r\n        })\r\n    };\r\n\r\n    const active = () => {\r\n        dispatch({\r\n            type: 'show',\r\n            payload: 'active'\r\n        })\r\n    };\r\n\r\n    const completed = () => {\r\n        dispatch({\r\n            type: 'show',\r\n            payload: 'completed'\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={style.todoAppControl}>\r\n\r\n                <button onClick={all} className={state.show === 'all' && style.selected}><Link to=\"/\">All</Link></button>\r\n                <button onClick={active} className={state.show === 'active' && style.selected}><Link to=\"/active\">Active</Link></button>\r\n                <button onClick={completed} className={state.show === 'completed' && style.selected}><Link to=\"/completed\">Completed</Link></button>\r\n                <button><a href=\"\">Remove tasks</a></button>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default TodoAppControl;","C:\\Users\\yusif\\Desktop\\todo-app\\src\\TodoApp\\Title.js",[],[],"C:\\Users\\yusif\\Desktop\\todo-app\\src\\TodoApp\\TodoItem.js",["68"],[],"import { useCallback, useContext, useRef } from 'react';\r\nimport style from './css/style.module.css';\r\nimport { todoContext } from '../contexts/TodoApp';\r\n\r\nfunction TodoItem({ id, task, isActive, isEditable }) {\r\n\r\n    const [state, dispatch] = useContext(todoContext);\r\n    const inpRef = useRef();\r\n\r\n\r\n  \r\n  \r\n    const removeTask = () => {\r\n        if (!window.confirm('Are you sure?')) {\r\n            return state;\r\n        }\r\n\r\n        dispatch({\r\n            type: 'remove',\r\n            payload: id\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    const complete = () => {\r\n        dispatch({\r\n            type: 'complete',\r\n            payload: id\r\n        })\r\n    }\r\n\r\n\r\n\r\n    const uncomplete = () => {\r\n        dispatch({\r\n            type: 'uncomplete',\r\n            payload: id\r\n        })\r\n    }\r\n\r\n    const edit = () => {\r\n        dispatch({\r\n            type: 'open_edit_form',\r\n            payload: id\r\n        })\r\n    }\r\n\r\n    const cancel = () => {\r\n        dispatch({\r\n            type: 'close_edit_form',\r\n            payload: id\r\n        })\r\n    }\r\n\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch({\r\n            type: 'save_change',\r\n            payload: {\r\n                id,\r\n                task: inpRef.current.value\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    if (isEditable) {\r\n        return (\r\n            <>\r\n                <div className={style.todoItemEditable}>\r\n                    <form onSubmit={onSubmit}>\r\n                        <input type=\"text\" defaultValue={task} ref={inpRef} />\r\n                        <div className={style.editBtn}>\r\n                            <button className={style.saveBtn} type='submit'>Save</button>\r\n                            <button className={style.cancelBtn} type='button' onClick={cancel}>Cancel</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`${style.todoItem} ${!isActive && style.isNotActive}`}>\r\n                <h2>{task}</h2>\r\n                <div className={`${style.btn} ${!isActive && style.isNotActive}`}>\r\n                    <button onClick={isActive ? complete : uncomplete}>{isActive ? 'Complete' : 'Uncomplete'}</button>\r\n                    <button onClick={edit}>Edit</button>\r\n                    <button className={style.redBtn} onClick={removeTask}>Delete</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default TodoItem;",{"ruleId":"69","severity":1,"message":"70","line":8,"column":17,"nodeType":"71","messageId":"72","endLine":8,"endColumn":25},{"ruleId":"73","severity":1,"message":"74","line":36,"column":11,"nodeType":"71","messageId":"75","endLine":36,"endColumn":16},{"ruleId":"73","severity":1,"message":"74","line":44,"column":11,"nodeType":"71","messageId":"75","endLine":44,"endColumn":16},{"ruleId":"73","severity":1,"message":"74","line":53,"column":11,"nodeType":"71","messageId":"75","endLine":53,"endColumn":16},{"ruleId":"73","severity":1,"message":"74","line":62,"column":11,"nodeType":"71","messageId":"75","endLine":62,"endColumn":16},{"ruleId":"73","severity":1,"message":"74","line":71,"column":11,"nodeType":"71","messageId":"75","endLine":71,"endColumn":16},{"ruleId":"73","severity":1,"message":"74","line":80,"column":11,"nodeType":"71","messageId":"75","endLine":80,"endColumn":16},{"ruleId":"73","severity":1,"message":"74","line":91,"column":11,"nodeType":"71","messageId":"75","endLine":91,"endColumn":16},{"ruleId":"69","severity":1,"message":"76","line":7,"column":12,"nodeType":"71","messageId":"72","endLine":7,"endColumn":17},{"ruleId":"77","severity":1,"message":"78","line":19,"column":8,"nodeType":"79","endLine":19,"endColumn":10,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":39,"column":25,"nodeType":"83","endLine":39,"endColumn":36},{"ruleId":"69","severity":1,"message":"84","line":1,"column":10,"nodeType":"71","messageId":"72","endLine":1,"endColumn":21},"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","no-redeclare","'todos' is already defined.","redeclared","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["85"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useCallback' is defined but never used.",{"desc":"86","fix":"87"},"Update the dependencies array to be: [dispatch]",{"range":"88","text":"89"},[495,497],"[dispatch]"]